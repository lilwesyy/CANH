// All ARBIDs
0x130 : Ignition status
0x600
0x601
0x612
0x617
0x618
0x620
0x629
0x636
0x640
0x654
0x656
0x660
0x661
0x662
0x663
0x66D
0x672
0x678
0x6F1 : DIA send command

// 0x130 : Ignition status

-- byte 0
---- bit 0 : Key in slot
---- bit 1 : --
---- bit 2 :
---- bit 3 : --
---- bit 4 : --
---- bit 5 : --
---- bit 6 :
---- bit 7 :

-- byte 1
---- bit 0 :
---- bit 1 :
---- bit 2 : Run
---- bit 3 :
---- bit 4 : Start
---- bit 5 : --
---- bit 6 : Accessory
---- bit 7 : --

//             0 1 2 3 4 5 6 7 :: 0 1 2 3 4 5 6 7
//             | | | | | | | | :: | | | | | | | |
Off : C0 00 :: - - - - - - X X :: - - - - - - - -
Off : C0 0D :: - - - - - - X X :: X - X X - - - -
Acc : C0 40 :: - - - - - - X X :: - - - - - - X -
Acc : C0 41 :: - - - - - - X X :: X - - - - - X -
Run : C5 40 :: X - X - - - X X :: - - - - - - X -
Str : C5 55 :: X - X - - - X X :: X - X - X - X -
//             | | | | | | | | :: | | | | | | | |
//             0 1 2 3 4 5 6 7 :: 0 1 2 3 4 5 6 7


Run : C1 45 :: X - - - - - X X :: X - X - - - X -




// Gauge hijack
//                      GAUGE CMD/RST MSB  LSB
0x6F1 => 0x60 0x05 0x30 0x20  0x06    0x12 0x3B 0xFF

// Steps = (MSB << 8) + LSB

// Speedo
4622 ::  260kph :: 0x6F1 => 0x60 0x05 0x30 0x20 0x06 0x12 0x3B 0xFF

// Tach
4667 :: 7000RPM :: 0x6F1 => 0x60 0x05 0x30 0x21 0x06 0x12 0x0E 0xFF

// Fuel
1800 :: 100% :: 0x6F1 => 0x60 0x05 0x30 0x22 0x06 0x07 0x08 0xFF
 900 ::  50% :: 0x6F1 => 0x60 0x05 0x30 0x22 0x06 0x03 0x84 0xFF
 918 ::  51% :: 0x6F1 => 0x60 0x05 0x30 0x22 0x06 0x03 0x96 0xFF

Reset :: 0x6F1 => 0x60 0x03 0x30 0x22 0x00 0xFF 0xFF 0xFF



// Blinker
can_send(0x6F1, 0x60, 0x05, 0x30, 0x2B, 0x06, 0x03, 0x01, 0x00);
can_send(0x6F1, 0x60, 0x05, 0x30, 0x2B, 0x06, 0x03, 0x02, 0x00);
can_send(0x6F1, 0x60, 0x05, 0x30, 0x2B, 0x06, 0x03, 0x03, 0x00);
can_send(0x6F1, 0x60, 0x05, 0x30, 0x2B, 0x06, 0x03, 0x04, 0x00);
can_send(0x6F1, 0x60, 0x05, 0x30, 0x2B, 0x00, 0x00, 0x00, 0x00);

// Off
19:03:56.556 -> [dieslg8][CAN][RECV] 0x6F1 => 60 03 30 2B 00 00 00 00



// Get 0x076D : Boost actual
// Multiplier : 0.091554
20:16:49.059 -> [dieslg8][CAN][RECV] 0x6F1 => 12 04 2C 10 07 6D 00 00
20:16:49.092 -> [dieslg8][CAN][RECV] 0x612 => F1 04 6C 10 2B 2D FF FF
//                                                        ^^ ^^


// Get data
// 0x0C1C : [IPLAD] Ambient pressure
// 0x076D : [IPUMG] Boost actual
// Boost Multiplier   : 0.091554
// Ambient multiplier : 0.030518

20:46:06.940 -> [dieslg8][CAN][SEND] 0x6F1 => 12 06 2C 10 0C 1C 07 6D
20:46:06.978 -> [dieslg8][CAN][RECV] 0x612 => F1 06 6C 10 80 E4 2B 2D
//                                                        ^^ ^^ ^^ ^^


ambient_hpa = buf[4]buf[5] * 0.030518;

boost_hpa = buf[6]buf[7] * 0.091554;
boost_psi = (boost_hpa - ambient_hpa) / 68.947572932;


// Boost PSI example
> ((0x2b2d * 0.091554) - (0x80e4 * 0.030518)) / 68.947572932;
0.07214806538449045


// Hijack

unsigned int steps = boost_psi * 60;

byte lsb = boost        & 0xFF || 0; // LSB
byte msb = (boost >> 8) & 0xFF || 0; // MSB



// Codes
3FF1
40D4
4596
485C
4A1E
4A24
4A2E
4B39
4B73
4CAE

[h2d] | | 0x3FF1
[h2d] | | 0x40D4
[h2d] | | 0x4596
[h2d] | | 0x485C
[h2d] | | 0x4A1E
[h2d] | | 0x4A24
[h2d] | | 0x4A2E
[h2d] | | 0x4B39
[h2d] | | 0x4B73
[h2d] | | 0x4CAE

3FF1 40D4 4596 485C 4A1E 4A24 4A2E 4B39 4B73 4CAE

16369;16596;17814;18524;18974;18980;18990;19257;19315;19630






// Reset EGR
0x6F1 => 12 04 18 02 FF FF 00 00
0x612 => F1 10 1A 58 08 4C AE E1

0x6F1 => 12 30 02 00 00 00 00 00
0x612 => F1 23 3F F1 21 4B 39 21
0x612 => F1 24 4A 24 61 FF FF FF
0x612 => F1 21 48 5C E1 4B 73 E1



// Reset EGR and others
can_send(0x6F1, 0x12, 0x04, 0x18, 0x02, 0xFF, 0xFF, 0x00, 0x00);
can_send(0x612, 0xF1, 0x10, 0x1A, 0x58, 0x08, 0x4C, 0xAE, 0xE1);
can_send(0x6F1, 0x12, 0x30, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00);
can_send(0x612, 0xF1, 0x23, 0x3F, 0xF1, 0x21, 0x4B, 0x39, 0x21);
can_send(0x612, 0xF1, 0x24, 0x4A, 0x24, 0xE1, 0xFF, 0xFF, 0xFF);
can_send(0x612, 0xF1, 0x21, 0x48, 0x5C, 0xE1, 0x4B, 0x73, 0xE1);
can_send(0x6F1, 0x12, 0x03, 0x14, 0xFF, 0xFF, 0x00, 0x00, 0x00);
can_send(0x612, 0xF1, 0x03, 0x7F, 0x14, 0x78, 0xFF, 0xFF, 0xFF);
can_send(0x612, 0xF1, 0x03, 0x54, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF);
